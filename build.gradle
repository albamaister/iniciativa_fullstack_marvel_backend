plugins {
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.pichincha'
version = '0.0.1'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snakeyaml.version', '2.0')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.apache.logging.log4j:log4j-web'
    implementation 'org.mapstruct:mapstruct-parent:1.5.2.Final'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.6'
    implementation 'io.github.openfeign:feign-okhttp:11.10'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.vintage:junit-vintage-engine'
}

test {
    useJUnitPlatform()
    maxParallelForks = 5
    finalizedBy jacocoTestReport // report is always generated after tests run
    testLogging {
        exceptionFormat "full"
        events "passed", "skipped", "failed"

    }
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport{
    dependsOn test
    reports {
        xml.required = true
        xml.outputLocation = file("${buildDir}/jacoco/test.xml")
        csv.required = false
        html.required = true
        html.outputLocation = file("${buildDir}/jacoco/html")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
            excludes = [
                    'com/pichincha/loan/simulator/exception/handler.*'
            ]
        }
    }
}